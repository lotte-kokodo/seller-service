plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    //==================Spring Rest docs==================
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'shop.kokodo'
version = '1.0'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

ext["hibernate.version"] = "5.6.5.Final"

ext {
    queryDslVersion = "5.0.0"
    set('springCloudVersion', "2021.0.4")
    snippetsDir = file('build/generated-snippets')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.cloud:spring-cloud-starter-zipkin:2.2.3.RELEASE'

    //spring boot, jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // spring security, jwt
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    //zipkin, sleuth
    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
    implementation 'org.springframework.cloud:spring-cloud-starter-zipkin:2.2.3.RELEASE'

    //spring cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    //spring valid
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //mysql
    implementation 'mysql:mysql-connector-java'

    //mariadb
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.3'

    //resilience4j
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

    //Querydsl
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //h2
    runtimeOnly 'com.h2database:h2'

    //junit
    implementation 'junit:junit:4.13.1'

    //format (gson,mapper,jackson)
    implementation 'com.google.code.gson:gson:2.10'
    implementation group: 'org.modelmapper', name: 'modelmapper', version: '2.1.1'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.1'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.13.3'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.13.3'
    implementation group: 'org.codehaus.jackson', name: 'jackson-mapper-asl', version: '1.9.13'


    //xstream
    implementation group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.16'

    //p6spy
//    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'

    //SpringRestDocs
//    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
//    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:{project-version}'

    //kafka
    implementation 'org.springframework.kafka:spring-kafka'

    // restAssured
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'

    //log
    implementation 'net.rakugakibox.spring.boot:logback-access-spring-boot-starter:2.7.1'

    // AWS S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    //test
    testImplementation 'io.rest-assured:rest-assured'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
}

//spring cloud
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

////==================Spring Rest docs==================
//test {
//    outputs.dir snippetsDir
//}
//
//asciidoctor {
//    dependsOn test
//    inputs.dir snippetsDir
////    configurations 'asciidoctorExt'
//}
//
//task createDocument(type: Copy) {
//    dependsOn asciidoctor
//    asciidoctor
//    from file("build/docs/asciidoc")
//    into file("src/main/resources/static/docs")
//}
//
////==================Spring Rest docs==================
//build {
//    dependsOn createDocument
//}
//
//bootJar {
//    dependsOn createDocument
//    from("${asciidoctor.outputDir}/html5") {
//        into 'static'
//    }
//}

//querydsl 추가 끝

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝

configurations {
    //==================Spring Rest docs==================
    compileOnly {
        extendsFrom annotationProcessor
    }
}