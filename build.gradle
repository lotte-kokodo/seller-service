plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
    //querydsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    //==================Spring Rest docs==================
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'shop.kokodo'
version = '1.0'
sourceCompatibility = '11'

configurations {
    //==================Spring Rest docs==================
    asciidoctorExtensions
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext["hibernate.version"] = "5.6.5.Final"

ext {
    queryDslVersion = "5.0.0"
    set('springCloudVersion', "2021.0.4")
    //==================Spring Rest docs==================
    snippetsDir = file('build/generated-snippets')

}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.cloud:spring-cloud-starter-sleuth'
	implementation 'org.springframework.cloud:spring-cloud-starter-zipkin:2.2.3.RELEASE'

    // AWS Secret Manager
    implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws-secrets-manager-config:2.2.6.RELEASE'

    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'mysql:mysql-connector-java'
    //spring boot actuator - cloud config를 서버다운 안시키고 적용시키는 방법
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    //resilience4j
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-reactor-resilience4j'
    // AWS S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // https://mvnrepository.com/artifact/org.mariadb.jdbc/mariadb-java-client
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.7.3'
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.12.1'
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.13.3'



    //Querydsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation "com.querydsl:querydsl-apt:${queryDslVersion}"

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    //junit
    implementation 'junit:junit:4.13.1'
    //modelmapper
    implementation group: 'org.modelmapper.extensions', name: 'modelmapper-spring', version: '3.1.0'
    //xstream
    implementation group: 'com.thoughtworks.xstream', name: 'xstream', version: '1.4.16'
    //p6spy
//    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
    //SpringRestDocs
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    //kafka
    implementation 'org.springframework.kafka:spring-kafka'

}

//spring cloud
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

//==================Spring Rest docs==================
test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

//==================Spring Rest docs==================
asciidoctor {
    configurations 'asciidoctorExtensions'
    inputs.dir snippetsDir
    dependsOn test
}

//==================Spring Rest docs==================
bootJar {
    dependsOn asciidoctor
    copy {
        from "${asciidoctor.outputDir}"
        into 'src/main/resources/static/docs'
    }
}

//querydsl 추가 끝

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}
//querydsl 추가 끝